## docker 1.10 compatible filter format {{range $i := .NetworkSettings.Networks}}{{if $i}}{{.IPAddress}}{{end}}{{end}}
## docker 1.9 filter format {{.NetworkSettings.IPAddress}}
## dispatcher manual insertion into webui. intend to work where only webui and dispatcher are spawned, i.e. no consul nor registrator
set -euf -o pipefail
set -x

run_mode=${1:-"register"} # register/deregister

# eval $(docker-machine env dockercoin)
version=$(docker info |grep "Server Version" | awk -F":" '{print $2}'| sed -e 's/ //g')
case $version in
	1.9*)
		filter='{{.NetworkSettings.IPAddress}}'
		;;
	1.10*)
		filter='{{range $i := .NetworkSettings.Networks}}{{if $i}}{{.IPAddress}}{{end}}{{end}}'
esac


for dispatcher in `docker ps |grep arachni_dispatcher|awk '{print $1}'`
do
	if [ "$(docker exec $dispatcher sh -c 'echo $ARACHNI')" != "dispatcher" ]
	then
		break
	fi
	export webui=$(docker ps |grep arachni_webui |awk '{print $1}')
	export ip=$(docker inspect -f "${filter}" $dispatcher)
	if [ $(docker exec $dispatcher ps auxww | grep -- "--neighbour" > /dev/null ; echo $?) == "0" ]
	then
		break
	fi
	count=$(docker exec $webui bin/arachni_web_script "p Dispatcher.where(address: \"$ip\").count")
	if [ $count == "0" ]
	then
	   	docker exec $webui bin/arachni_web_script "Dispatcher.create( address: \"$ip\" , port: 7331 , global: true , alive: false , description: 'Dynamic Name', user_ids: [1]).save( validate: false )"
	fi
	if [ $run_mode == "deregister" ]
	then
		docker exec $webui bin/arachni_web_script "Dispatcher.where(address: \"$ip\").destroy_all"
	fi
done